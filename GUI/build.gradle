apply plugin: 'groovy'
apply plugin: 'java'

repositories {
  mavenLocal()
  jcenter()
  mavenCentral()
}

buildscript {
  dependencies {
    classpath files('../build/libs/genericdatabase-all.jar')
  }
}

import groovy.swing.SwingBuilder
import javax.swing.WindowConstants
import com.wartbar.genericdb.model.DBEntry
import com.wartbar.genericdb.access.IO

task showDatabase(group: 'AMOS') {
  description = "show the generic database in a GUI created with SwingBuilder"
  doLast {

    List<DBEntry> entries = IO.getLastEntries(10)


    List<Map<String,String>> dbEntryList = new ArrayList<>()

    entries.each {
      String entryID = it.entryId
      Calendar timestamp = it.timestamp

      it.stringList.each {
        HashMap<String,String> entry = new HashMap<>()
        entry.put("EntryID", entryID)
        entry.put("TimeStamp", timestamp.getTime().toString())
        entry.put("DataType", "String")
        entry.put("Key", it.key)
        entry.put("Value", it.value)
        dbEntryList.add(entry)
      }
      it.dataList.each {
        HashMap<String,String> entry = new HashMap<>()
        entry.put("EntryID", entryID)
        entry.put("TimeStamp", timestamp.getTime().toString())
        entry.put("DataType", "Integer")
        entry.put("Key", it.key)
        entry.put("Value", it.value)
        dbEntryList.add(entry)
      }
    }

    def swing = new SwingBuilder()
    def frame = swing.frame(title:'Generic Database', defaultCloseOperation:WindowConstants.EXIT_ON_CLOSE) {
      scrollPane {
        table() {
          tableModel(list:dbEntryList) {
            propertyColumn(header:'EntryID', propertyName:'EntryID')
            propertyColumn(header:'TimeStamp', propertyName:'TimeStamp')
            propertyColumn(header:'DataType',propertyName:'DataType')
            propertyColumn(header:'Key',propertyName:'Key')
            propertyColumn(header:'Value',propertyName:'Value')
          } }
      }
    }

    frame.pack()
    frame.show()
  }
}
