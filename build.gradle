apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
  baseName = 'gs-rest-service'
  version =  '0.1.0'
}

repositories {
  mavenLocal()
  jcenter()
  mavenCentral()
}

task fatJar(type: Jar, group: "AMOS") {
  description = "build fat jar of this project"
  manifest {
    attributes 'Main-Class': 'com.wartbar.genericdb.main.GenericDBMain'
  }
  sourceSets.main.output.resourcesDir = sourceSets.main.output.classesDir
  baseName = project.name + '-all'
  from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
  with jar
  exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}

compileJava.dependsOn(processResources)
fatJar.dependsOn(processResources)

buildscript {
  repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
  }

  dependencies {
    classpath files('build/libs/genericdatabase-all.jar')
    classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.0.RELEASE")
  }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
  compile ('org.codehaus.groovy:groovy-all:2.4.6',
          'com.h2database:h2:1.4.193',
          'org.eclipse.persistence:eclipselink:2.6.4',
          'org.eclipse.persistence:org.eclipse.persistence.jpars:2.6.4',
          'org.eclipse.persistence:org.eclipse.persistence.jpa.modelgen.processor:2.6.4',
          'org.eclipse.persistence:org.eclipse.persistence.jpa:2.6.4',
          'javax.annotation:javax.annotation-api:+'
  )
  compile("org.springframework.boot:spring-boot-starter-web")

  testCompile(
          'junit:junit:4.12',
          'org.codehaus.groovy:groovy-all:2.4.6',
          'org.spockframework:spock-core:1.0-groovy-2.4',
  )
  testCompile('org.springframework.boot:spring-boot-starter-test')
  testCompile('com.jayway.jsonpath:json-path')

  testRuntime(
          'com.athaydes:spock-reports:1.2.7'
  )
}

task backupGradleHomeJars(group:"AMOS") {
  description = "backup all jars found in my gradle home"
  doLast {
    copy {
      includeEmptyDirs = false
      from '/Users/amos/gradlehome'
      into '/Users/amos/backupDownloadedJars'
      include '**/*.jar'
    }
  }
}
